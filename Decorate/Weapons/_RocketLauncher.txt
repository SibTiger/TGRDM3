ACTOR TGRRocketLauncher : RocketLauncher REPLACES RocketLauncher
{
    Tag "Rocket Launcher"
    // Standards
    // ===========
        +Inventory.Untossable // Can not 'drop (CCMD)' the weapon
        +Inventory.Undroppable // Weapon can never be taken away from the player's inventory.
        +Weapon.NoAutoAim // Disallow AutoAim with this weapon.
        +Weapon.No_Auto_Switch // When this weapon is picked up, do not switch to it.
        Weapon.BobStyle InverseSmooth // Different taste of bobbing; use Doom Alpha's bobbing style - but smooth.

        // Because some mods in Zandronum abuse the ConsoleCommand to change the user's settings; I found one that changes bobbing....
            Weapon.BobRangeX 1.0
            Weapon.BobRangeY 1.0
            Weapon.BobSpeed  1.0
            Weapon.YAdjust 10
    // ------
    // ======

    // ----
    // Flags, Switches, and Properties
    // =================================
        +Inventory.InvBar // Show the weapon icon in the HUD Inventory list
        -Weapon.NoAutoFire // Allow the weapon to automatically fire (if the user still has +attack == true) when raised or selected.
        Weapon.PreferredSkin "Rocket-Marine" // Zandronum feature only; dependency required: MarineSkins
        +NoGravity
        +FloatBob
    // ------
    // ======

    // ----
    // Ammo Management
        Weapon.AmmoUse 1
        Weapon.AmmoGive 8
        Weapon.AmmoType "RocketAmmo"
    // ----
        Inventory.Icon "LAUNA0"
    // ------
    States
    {
    Fire:
        PKRL A 2 
        PKRL A 4 A_GunFlash
        PKRL B 2
        PKRL D 3 A_FireCustomMissile ("TGRRocket")
        PKRL C 3
        PKRL BE 2
        PKRL FG 1
        PKRL A 0 A_ReFire
        Goto Ready
    Flash:
        PKRF A 3 Bright A_Light1
        PKRF B 2 Bright
        PKRF C 2 Bright A_Light2
        PKRF DE 3 Bright
        Goto LightDone
    Spawn:
        // Allow a function to be called immediately
            TNT1 A 0 NoDelay
        // Spawn the item, but raise it by z-offset value
            LAUN A -1 A_Warp(AAPTR_DEFAULT, 0, 0, 8)
        Stop
    }
}